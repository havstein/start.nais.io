name: Build and deploy main
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
      - "build.provenance"
      - "**/slsa.yaml"
jobs:
  build:
    name: Build all the things
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # ratchet:actions/checkout@v3
      - uses: actions/setup-java@16cca5479d7c6b6843f6a6515640ba33c6501543 # ratchet:actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'
      - uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b # ratchet:gradle/wrapper-validation-action@v1
      - name: Build and test the app
        run: sudo ./gradlew clean test shadowJar
      - name: Install cosign
        uses: sigstore/cosign-installer@48866aa521d8bf870604709cd43ec2f602d03ff2 # ratchet:sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.9.0'
      - name: Verify distroless base image
        run: cosign verify --key distroless.pub gcr.io/distroless/java17
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # ratchet:docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Docker image tag with short sha
        id: dockertag
        run: echo "::set-output name=docker_img::ghcr.io/${{ github.repository }}:$(git rev-parse --short HEAD)"
      - name: Build and push the Docker image
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8 # ratchet:docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.dockertag.outputs.docker_img }}
  deploy_to_dev:
    name: Deploy to dev-gcp
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # ratchet:actions/checkout@v3
      - name: Generate Docker image tag
        id: dockertag
        run: echo "::set-output name=docker_img::ghcr.io/${{ github.repository }}:$(git rev-parse --short HEAD)"
      - uses: nais/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/dev.yaml
          IMAGE: ${{ steps.dockertag.outputs.docker_img }}
  deploy_to_prod:
    name: Deploy to prod-gcp
    needs: deploy_to_dev
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # ratchet:actions/checkout@v3
      - name: Generate Docker image tag
        id: dockertag
        run: echo "::set-output name=docker_img::ghcr.io/${{ github.repository }}:$(git rev-parse --short HEAD)"
      - uses: nais/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/prod.yaml
          IMAGE: ${{ steps.dockertag.outputs.docker_img }}
